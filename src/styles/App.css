/* CSS Custom Properties (Variables) */
:root {
  /* Colors */
  --color-primary: #3b82f6;
  --color-primary-hover: #2563eb;
  --color-primary-disabled: #94a3b8;
  --color-text-primary: #1e293b;
  --color-text-secondary: #374151;
  --color-text-muted: #6b7280;
  --color-text-light: #8e95a0;
  --color-gray-light: #f8fafc;
  --color-gray-medium: #d1d5db;
  --color-gray-dark: #666666;
  --color-white: #ffffff;
  --color-error-bg: #fee2e2;
  --color-error-border: #fca5a5;
  --color-error-text: #dc2626;
  --color-highlight: #3b82f6;
  --color-blue-dimmed: #c1d7f8;
  --color-dimmed: #cccccc;
  --color-green: #10b981;
  --color-green-dark: #059669;
  
  /* Spacing */
  --spacing-xxs: 2px;
  --spacing-xs: 5px;
  --spacing-sm: 8px;
  --spacing-md: 10px;
  --spacing-lg: 15px;
  
  /* Other */
  --border-radius-sm: 4px;
  --font-xs: 0.6rem;
  --font-sm: 0.75rem;
  --font-base: 0.8rem;
  --font-md: 0.9rem;
  --font-lg: 1.2rem;
  --shadow-light: 0 1px 3px rgba(0,0,0,0.1);
  --transition-xfast: 0.1s;
  --transition-fast: 0.2s;
}

/* Base styles */
body, html {
  margin: 0;
  padding: 0;
  overflow-x: hidden;
  font-family: 'Avenir', Tahoma, Geneva, Verdana, sans-serif;
  font-size: var(--font-md);
  color: var(--color-text-primary);
}

/* Layout */
.app-container {
  max-width: 1400px;
  margin: 0 auto;
  padding: var(--spacing-xs);
  min-height: 100vh;
  box-sizing: border-box;
}

.app-title {
  text-align: center;
  color: var(--color-text-primary);
  margin-bottom: var(--spacing-xs);
  font-size: var(--font-lg);
}

/* Buttons */
.btn {
  background: var(--color-primary);
  color: var(--color-white);
  border: none;
  border-radius: var(--border-radius-sm);
  cursor: pointer;
  transition: background-color var(--transition-fast);
  padding: var(--spacing-xs);
  font-size: var(--font-md);
}

.btn:hover {
  background: var(--color-primary-hover);
}

.btn:disabled {
  background: var(--color-primary-disabled);
  cursor: not-allowed;
}

/* Controls */
.controls {
  display: flex;
  gap: var(--spacing-md);
  margin-bottom: var(--spacing-sm);
  flex-wrap: wrap;
  justify-content: center;
}

/* Stats */
.stats {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  font-size: var(--font-sm);
  font-style: italic;
  color: var(--color-text-light);
  line-height: 1;
}

/* Error messages */
.error-message {
  background: var(--color-error-bg);
  border: 1px solid var(--color-error-border);
  color: var(--color-error-text);
  padding: var(--spacing-lg);
  border-radius: var(--border-radius-sm);
  margin-bottom: var(--spacing-sm);
  text-align: center;
}

/* Filter section */
.filter-section {
  background: var(--color-white);
  padding: var(--spacing-sm);
  border-radius: var(--border-radius-sm);
  margin-bottom: var(--spacing-md);
  box-shadow: var(--shadow-light);
}

.filter-group {
  display: flex;
  gap: var(--spacing-sm);
  align-items: center;
  flex-wrap: wrap;
}

.filter-group label {
  color: var(--color-text-secondary);
  font-size: var(--font-md);
}

.filter-select {
  padding: var(--spacing-xs);
  border: 1px solid var(--color-gray-medium);
  border-radius: var(--border-radius-sm);
  background: var(--color-white);
  color: var(--color-text-secondary);
}

/* Column controls */
.column-controls h4 {
  margin-bottom: var(--spacing-xs);
  color: var(--color-text-secondary);
  font-size: var(--font-base);
}

.column-control-group {
  display: flex;
  gap: var(--spacing-lg);
  flex-wrap: wrap;
}

.column-toggle {
  display: flex;
  align-items: center;
  gap: var(--spacing-xs);
}

.column-toggle input[type="checkbox"] {
  margin: 0;
}

.column-toggle label {
  font-size: var(--font-base);
  color: var(--color-text-secondary);
  cursor: move;
}

/* System display */
.system-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.system-title {
  margin: 0;
  font-size: var(--font-md);
  flex: 1;
}

.system-thumb {
  width: 60px;
  height: 60px;
  object-fit: cover;
  border-radius: var(--border-radius-sm);
  margin-left: 12px;
}

.link-unstyled {
  color: inherit;
  text-decoration: underline;
}

/* Diagram container */
.diagram-container {
  overflow: hidden;
  margin-bottom: var(--spacing-sm);
  background: var(--color-white);
  min-height: 500px;
  max-height: calc(100vh - 300px);
}

.diagram-svg {
  width: 100%;
  height: 100%;
  display: block;
}

/* Visualization styles */
.tooltip {
  position: absolute;
  background: rgba(0,0,0,0.8);
  color: var(--color-white);
  padding: var(--spacing-xs);
  border-radius: var(--border-radius-sm);
  font-size: var(--font-sm);
  pointer-events: none;
  opacity: 0;
  transition: opacity var(--transition-fast);
}

/* Links */
.link {
  fill: none;
  opacity: 0.5;
  cursor: pointer;
}

.link.flow-highlighted {
  stroke: var(--color-highlight) !important;
  opacity: 1 !important;
}

.link.flow-dimmed {
  stroke: var(--color-dimmed) !important;
  opacity: 0.3 !important;
}

/* Link overlays */
.link-overlay {
  pointer-events: none;
  fill: none;
}

.link-overlay-blue {
  stroke: var(--color-highlight) !important;
  opacity: 1;
}

.link-overlay-green {
  stroke: var(--color-green) !important;
  opacity: 0.8;
}

.link-overlay-blue-dimmed {
  stroke: var(--color-blue-dimmed) !important;
  opacity: 1 !important;
}

/* Nodes */
.node rect {
  stroke-width: 0;
}

/* these should be gray...*/
.node rect.node-highlighted {
  opacity: 0.3;
}

.node rect.node-dimmed {
  opacity: 0.3;
}

.node rect.node-dimmed ~ text {
  opacity: 0.3;
}

.node rect.node-additional {
  fill: var(--color-green) !important;
  opacity: 1 !important;
}

.node-overlay-blue {
  opacity: 1;
  fill: var(--color-highlight) !important;
}

.node-overlay-blue-dimmed {
  opacity: 1;
  fill: var(--color-blue-dimmed) !important;
}

.node-overlay-green {
  opacity: 0.8;
  fill: var(--color-green) !important;
}

.green-highlighting-active .node rect.node-highlighted:not(.node-additional) {
  opacity: 0.3;
}

/* Dim all blue highlighted node text in frozen mode */
.green-highlighting-active .node rect.node-highlighted ~ text {
  opacity: 0.3 !important;
}

/* Keep text bright for nodes that have green overlays - you'll need to add a class/attribute to identify these */
.green-highlighting-active .node[data-has-green-overlay] rect.node-highlighted ~ text {
  opacity: 1 !important;
}

/* Zoom controls */
.zoom-button {
  fill: var(--color-primary);
  cursor: pointer;
  height: 25px;
  width: 25px;
}

.zoom-button-reset {
  fill: var(--color-text-muted);
}

.zoom-button-text {
  fill: white;
  font-size: 18px;
  pointer-events: none;
  text-anchor: middle;
  transform: translateX(12px);
}

.zoom-button-disabled {
  fill: var(--color-primary-disabled) !important;
  cursor: not-allowed !important;
  pointer-events: none !important;
}

.zoom-button-text-disabled {
  cursor: not-allowed !important;
  pointer-events: none !important;
}

/* Filter chips */
.active-filters {
  margin-top: var(--spacing-sm);
}

.chips-container {
  display: flex;
  gap: var(--spacing-xs);
  flex-wrap: wrap;
}

.chip {
  display: inline-flex;
  align-items: center;
  background: var(--color-primary);
  color: var(--color-white);
  padding: var(--spacing-xxs) var(--spacing-xs);
  border-radius: var(--border-radius-sm);
  font-size: var(--font-sm);
  gap: var(--spacing-xs);
}

.chip-remove {
  background: none;
  border: none;
  color: var(--color-white);
  cursor: pointer;
  font-size: var(--font-md);
  font-weight: bold;
  padding: 0;
  margin-left: var(--spacing-xxs);
}

.chip-remove:hover {
  opacity: 0.7;
}


/* Clicked element indicator */
.clicked-element {
  stroke: var(--color-text-primary);
  stroke-width: 4px !important;
  stroke-dasharray: 2,2 !important;
  stroke-opacity: 1 !important;
  opacity: 1 !important;
  fill-opacity: 1 !important;
}

.clicked-link-outline {
  fill: none !important;
  stroke: var(--color-text-primary) !important;
  stroke-dasharray: 2,2 !important; /* Very dense dotted pattern */
  stroke-opacity: 1 !important;
  pointer-events: none !important;
}

.no-flash * {
  transition: none !important;
}